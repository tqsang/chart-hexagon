[{"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\index.js":"1","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\App.js":"2","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\reportWebVitals.js":"3","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Header\\index.jsx":"4","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\index.jsx":"5","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\Chart\\index.jsx":"6","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\Search\\index.jsx":"7","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\constants\\DateTime.js":"8","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\Chart\\Legend\\index.jsx":"9"},{"size":547,"mtime":1610873614636,"results":"10","hashOfConfig":"11"},{"size":306,"mtime":1610603569311,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":853,"mtime":1610955185911,"results":"14","hashOfConfig":"11"},{"size":2664,"mtime":1614833626329,"results":"15","hashOfConfig":"11"},{"size":5881,"mtime":1614754447594,"results":"16","hashOfConfig":"11"},{"size":7156,"mtime":1614746151287,"results":"17","hashOfConfig":"11"},{"size":178,"mtime":1614704418855,"results":"18","hashOfConfig":"11"},{"size":711,"mtime":1614066741558,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nfbpp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\index.js",[],["40","41"],"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\App.js",[],"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\reportWebVitals.js",[],"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Header\\index.jsx",[],"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\index.jsx",["42"],"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\Chart\\index.jsx",["43"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './Chart.scss';\r\nimport Legend from './Legend';\r\nimport colorLineChart from '../../../constants/colorLine.json';\r\n\r\nimport moment from 'moment';\r\n\r\nChart.propTypes = {\r\n  data: PropTypes.array,\r\n  onChangeChart: PropTypes.func,\r\n};\r\nChart.defaultProps = {\r\n  data: [],\r\n  onChangeChart: null,\r\n}\r\n\r\nfunction Chart({ data, label }) {\r\n\r\n  let fetchDate = data[0].data.map((item) => moment(item.date, 'MM/DD').format('MM/DD'));\r\n\r\n  let fetchData = (label === \"Tất cả các quỹ\" ? data : data.filter(i => i.name === label)).map((item, index) => {\r\n    const lineColor = index < colorLineChart.colors.length\r\n      ? colorLineChart.colors[index]\r\n      : colorLineChart.colorsDefault;\r\n    return {\r\n      label: item.name,\r\n      data: item.data.map(item => item.quantity),\r\n      backgroundColor: lineColor.backgroundColor,\r\n      borderColor: lineColor.borderColor,\r\n      borderWidth: 2,\r\n      lineTension: 0,\r\n      pointHoverBorderWidth: 15,\r\n      pointHoverBorderColor: lineColor.pointHoverBorderColor,\r\n      pointBackgroundColor: lineColor.pointBackgroundColor,\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      {/* <Legend /> */}\r\n      <div className=\"chart\">\r\n        <Line\r\n          data={{\r\n            labels: fetchDate,\r\n            datasets: fetchData,\r\n          }}\r\n\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n\r\n            scales: {\r\n              xAxes: [{\r\n                display: true,\r\n\r\n                ticks: {\r\n                  fontColor: '#0A3B32',\r\n                  fontSize: 16,\r\n                  fontFamily: 'FWDCircularVietTT-Book',\r\n                  padding: 15,\r\n                }\r\n\r\n\r\n              }],\r\n              yAxes: [{\r\n                display: true,\r\n\r\n                ticks: {\r\n                  beginAtZero: true,\r\n\r\n                  fontColor: '#0A3B32',\r\n                  fontSize: 16,\r\n                  fontFamily: 'FWDCircularVietTT-Book',\r\n                }\r\n              }],\r\n            },\r\n            legend: {\r\n              display: true,\r\n              labels: {\r\n                fontColor: '#0A3B32',\r\n                fontSize: 16,\r\n                fontFamily: 'FWDCircularVietTT-Book',\r\n\r\n                boxWidth: 14,\r\n              },\r\n              align: 'center',\r\n            },\r\n            layout: {\r\n              padding: {\r\n                left: 20,\r\n                right: 0,\r\n                top: 20,\r\n                bottom: 20,\r\n\r\n              }\r\n            },\r\n            tooltips: {\r\n              enabled: false,\r\n              custom: function (tooltipModel) {\r\n                // Tooltip Element\r\n                var tooltipEl = document.getElementById('chartjs-tooltip');\r\n\r\n                // Create element on first render\r\n                if (!tooltipEl) {\r\n                  tooltipEl = document.createElement('div');\r\n                  tooltipEl.id = 'chartjs-tooltip';\r\n                  tooltipEl.innerHTML = '<table></table>';\r\n                  document.body.appendChild(tooltipEl);\r\n                }\r\n\r\n                // Hide if no tooltip\r\n                if (tooltipModel.opacity === 0) {\r\n                  tooltipEl.style.opacity = 0;\r\n                  return;\r\n                }\r\n\r\n                // Set caret Position\r\n                tooltipEl.classList.remove('above', 'below', 'no-transform');\r\n                if (tooltipModel.yAlign) {\r\n                  tooltipEl.classList.add(tooltipModel.yAlign);\r\n                } else {\r\n                  tooltipEl.classList.add('no-transform');\r\n                }\r\n\r\n                function getBody(bodyItem) {\r\n                  return bodyItem.lines;\r\n                }\r\n\r\n                // Set Text\r\n                if (tooltipModel.body) {\r\n                  var titleLines = tooltipModel.title || [];\r\n                  var bodyLines = tooltipModel.body.map(getBody);\r\n\r\n                  const borderColor = tooltipModel.labelColors.map(item => item.backgroundColor);\r\n\r\n                  tooltipEl.style.border = `2px solid ${borderColor[0]}`;\r\n\r\n                  var innerHtml = '<thead>';\r\n\r\n                  titleLines.forEach(function (title) {\r\n                    innerHtml += `<tr><th class=\"tooltil-css tooltip-title\">Ngày: ${title}/2021</th></tr>`;\r\n                  });\r\n                  innerHtml += '</thead><tbody>';\r\n\r\n                  bodyLines.forEach(function (body, i) {\r\n                    const content = `Giá trị ${body.toString().replace('Q', 'q')}`;\r\n                    innerHtml += `<tr><td class=\"tooltil-css tooltip-content\">${content}</td></tr>`;\r\n                  });\r\n                  innerHtml += '</tbody>';\r\n\r\n                  var tableRoot = tooltipEl.querySelector('table');\r\n                  tableRoot.innerHTML = innerHtml;\r\n                }\r\n\r\n                // `this` will be the overall tooltip\r\n                var position = this._chart.canvas.getBoundingClientRect();\r\n\r\n                // Display, position, and set styles for font\r\n                const tooltipElOffset = 10;\r\n                tooltipEl.style.minHeight = '60px';\r\n                tooltipEl.style.minWidth = '166px';\r\n\r\n                tooltipEl.style.opacity = 1;\r\n                tooltipEl.style.position = 'absolute';\r\n                tooltipEl.style.right = position.right + window.pageXOffset - tooltipModel.caretX + tooltipElOffset + 'px';\r\n                tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY - parseInt(tooltipEl.style.minHeight) - tooltipElOffset + 'px';\r\n                tooltipEl.style.pointerEvents = 'none';\r\n              }\r\n            }\r\n          }}\r\n          height={367}\r\n          width={1050}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chart;","C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\Search\\index.jsx",[],"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\constants\\DateTime.js",[],"C:\\Users\\tranq\\Desktop\\hexagonasia\\src\\component\\Body\\Chart\\Legend\\index.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":87,"column":6,"nodeType":"50","endLine":87,"endColumn":8,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":14},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'initialValue' and 'label'. Either include them or remove the dependency array.","ArrayExpression",["58"],"no-unused-vars","'Legend' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [initialValue, label]",{"range":"61","text":"62"},[1972,1974],"[initialValue, label]"]